(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{467:function(t,a,s){"use strict";s.r(a);var n=s(2),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_4-激活函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-激活函数"}},[t._v("#")]),t._v(" 4 激活函数")]),t._v(" "),a("p",[t._v("torch.nn.functional")]),t._v(" "),a("h2",{attrs:{id:"_4-1-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-简介"}},[t._v("#")]),t._v(" 4.1 简介")]),t._v(" "),a("p",[t._v("在多层神经网络中，上层节点的输出和下层节点的输入之间有一个函数关系。如果这个函数我们设置为非线性函数，深层网络的表达能力将会大幅度提升，几乎可以逼近任何函数，我们把这些非线性函数叫做激活函数。")]),t._v(" "),a("p",[t._v("用途：激活函数的作用就是"),a("strong",[t._v("给网络提供非线性的建模能力")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"_4-2-常用激活函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-常用激活函数"}},[t._v("#")]),t._v(" 4.2 常用激活函数")]),t._v(" "),a("h3",{attrs:{id:"sigmoid函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sigmoid函数"}},[t._v("#")]),t._v(" Sigmoid函数")]),t._v(" "),a("p",[t._v("torch.sigmoid()")]),t._v(" "),a("p",[a("img",{attrs:{src:"markdown-img/4%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0.assets/6c4df72f-cec4-40b6-9dab-df6f1f22eadd.png",alt:"image.png"}})]),t._v(" "),a("p",[t._v("优点：很好地解释了神经元在受到刺激的情况下是否被激活和向后传递的情景。当取值接近0时几乎没有被激活，当取值接近1的时候几乎完全被激活。")]),t._v(" "),a("p",[t._v("缺点：")]),t._v(" "),a("ul",[a("li",[t._v("容易出现梯度消失(0.9^100)，甚至小概率会出现梯度爆炸(1.1^100)问题")]),t._v(" "),a("li",[t._v("含有幂函数，计算机在求解的时候比较耗时")]),t._v(" "),a("li",[t._v("输出不是0均值。（经验而言，均值0效果更好）")])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" torch\n\nx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" torch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rand"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\noutput "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" torch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sigmoid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("tensor([0.6491, 0.5927, 0.7311, 0.6114])\n")])])]),a("h3",{attrs:{id:"tanh函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tanh函数"}},[t._v("#")]),t._v(" Tanh函数")]),t._v(" "),a("p",[t._v("本质是sigmoid函数的一个"),a("strong",[t._v("变形")]),t._v(",两者的关系为"),a("code",[t._v("tanh(x)=2sigmoid(2x)-1")]),t._v(" "),a("img",{attrs:{src:"markdown-img/4%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0.assets/057e6004-1052-4e20-9625-5d527559d8e4.png",alt:"image.png"}})]),t._v(" "),a("p",[t._v("优势：")]),t._v(" "),a("ul",[a("li",[t._v("将输出值映射到（-1,1）之间，因此解决了sigmoid函数的非0均值问题")])]),t._v(" "),a("p",[t._v("缺点：")]),t._v(" "),a("ul",[a("li",[t._v("存在梯度消失和梯度爆炸的问题")]),t._v(" "),a("li",[t._v("幂运算也会导致计算耗时久")])]),t._v(" "),a("p",[t._v("注意：为了防止饱和情况的发生，在激活函数前可以加一步batch normalization，尽可能的保证神经网络的输入在每一层都具有均值较小的0中心分布")]),t._v(" "),a("h3",{attrs:{id:"relu函数-线性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#relu函数-线性"}},[t._v("#")]),t._v(" Relu函数(线性)")]),t._v(" "),a("p",[t._v("Relu是修正线性单元（The Rectified Linear Unit）的简称\n"),a("img",{attrs:{src:"markdown-img/4%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0.assets/fe762381-0eaf-42d5-836d-c40f0b59ceb5.png",alt:"image.png"}})]),t._v(" "),a("p",[t._v("优势：")]),t._v(" "),a("ul",[a("li",[t._v("不存在指数运算部分，几乎没有什么计算量")]),t._v(" "),a("li",[t._v("具有单侧抑制(负无穷,0)、宽兴奋(0,正无穷)边界的生物学合理性")])]),t._v(" "),a("p",[t._v("缺点：有时由于输出反复为0，神经元可能会死亡。")]),t._v(" "),a("h3",{attrs:{id:"leakyrelu函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leakyrelu函数"}},[t._v("#")]),t._v(" LeakyRelu函数")]),t._v(" "),a("p",[t._v("解决一部分Relu函数存在的可能杀死神经元的问题（输出加了个斜率）")]),t._v(" "),a("p",[a("img",{attrs:{src:"markdown-img/4%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0.assets/1ce235d0-3ec7-415d-80a5-c6c61e957267.png",alt:"image.png"}})]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" torch\nx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" torch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rand"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" torch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("functional"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("leaky_relu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.03")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("tensor([0.4088, 0.5671, 0.3428, 0.2739, 0.9709, 0.2129, 0.8612, 0.4952, 0.5532,\n        0.0693])\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);